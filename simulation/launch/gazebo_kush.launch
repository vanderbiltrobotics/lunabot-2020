<launch>
  <arg name="model" default="$(find robot_simulation)/swapbot.urdf.xacro"/>
  <arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />
  <param name="use_gui" value="true"/>


  <include file="$(find urdf_sim_tutorial)/launch/gazebo.launch">
    <arg name="model" value="$(arg model)" />
  </include>
  
  <!-- Needs to be uncommented if joint contoller is not implemented yet... 
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  --> 

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />
  
  <!-- The following should be replaced by whatever the motor control team comes up with -->
 


  <rosparam command="load"
            file="$(find robot_simulation)/config/joints.yaml"
            ns="gazebo_joint_state_controller" />


  <!-- Drive motor control node - translates twist message into individual motor speeds -->
  <param name="wheel_separation" type="double" value="0.305"/>
  <param name="wheel_radius" type="double" value="0.1525"/>
  <param name="max_in_lin_vel" type="double" value="1.0"/>
  <param name="max_in_ang_vel" type="double" value="1.0"/>
  <param name="max_out_lin_vel" type="double" value="1.0"/>
  <param name="max_out_ang_vel" type="double" value="1.0"/>
  <param name="output_mode" type="string" value="vel"/>
  <param name="queue_size" type="int" value="15"/>
  <node name="drive_speed_conversion" pkg="ros_teleop" type="drive_speed_conversion.py"/>

  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/drive_cmd" />
  </node>

</launch>
