<?xml version="1.0"?>
<robot name="swap_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="bwidth" value="0.35" />
  <xacro:property name="blength" value="0.9" />
  <xacro:property name="bheight" value=".05" />
  <xacro:property name="clearance" value="0.10" />
  <xacro:property name="wheelthick" value=".05" />
  <xacro:property name="wheeldiam" value=".2" />

   <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1" />
    </inertial>
  </xacro:macro> 

  
  <link name="base_link">
    <visual>
      <geometry>
	<mesh filename= "package://simulation/betterbase.stl" scale="0.0254 0.0254 0.0254"/>
        <!--<box size="${blength} ${bwidth} ${bheight}"/>-->
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 ${clearance}"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
	<mesh filename= "package://simulation/betterbase.stl" scale="0.0254 0.0254 0.0254"/>
        <!--<box size="${blength} ${bwidth} ${bheight}"/>-->
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 ${clearance}"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </collision>
    <xacro:default_inertial mass="50"/> 
  </link>

    <!-- Import macro for realsense-RS200 camera-->
    <xacro:include filename="$(find realsense_gazebo_plugin)/urdf/realsense-RS200.macro.xacro"/>
    <!-- Create camera instance -->
    <xacro:realsense-rs200 prefix="" parent="base_link">
        <origin xyz="0.45 0 0.15" rpy="0 0 0" />   
    </xacro:realsense-rs200>

  
  <xacro:macro name="m_joint" params="name type axis_xyz origin_rpy origin_xyz parent child limit_e limit_l limit_u limit_v">
    <joint name="${name}" type="${type}">
      <axis xyz="${axis_xyz}" />
      <limit effort="${limit_e}" lower="${limit_l}" upper="${limit_u}" velocity="${limit_v}" />
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}" />
      <parent link="${parent}" />
      <child link="${child}" />
    </joint>
    <transmission name="trans_${name}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${name}">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro> 
  
  <xacro:macro name="m_link_cylinder" params="name origin_xyz origin_rpy radius length mass ixx ixy ixz iyy iyz izz">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}" />
        <inertia ixx="${ixx}" ixy="${ixy}" ixz="${ixz}" iyy="${iyy}" iyz="${iyz}" izz="${izz}" />
      </inertial>
      <collision>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}" />
        <geometry>
          <cylinder radius="${radius*0.9}" length="${length*0.9}" />
        </geometry>
      </collision>
      <visual>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}" />
        <geometry>
          <cylinder radius="${radius}" length="${length}" />
        </geometry>
        <material name="blue">
          <color rgba="0 0 1 1"/>
        </material>
      </visual>
    </link>
  </xacro:macro>
  
  <m_joint name="base_to_arm_1" type="revolute"
           axis_xyz="0 1 0"
           origin_rpy="0 0 0" origin_xyz="-0.4 0 0.15"
           parent="base_link" child="arm_1"
           limit_e="1000" limit_l="-3.14" limit_u="3.14" limit_v="0.5" />
           
  <m_link_cylinder name="arm_1"
              origin_rpy="0 0 0" origin_xyz="0 0 0.206"
              mass="1"
              ixx="0.01" ixy="0" ixz="0"
              iyy="0.01" iyz="0"
              izz="0.01"
              radius="0.02" length="0.413" />
  <m_joint name="arm_1_to_arm_2" type="revolute"
           axis_xyz="0 1 0"
           origin_rpy="0 0 0" origin_xyz="0 0 0.413"
           parent="arm_1" child="arm_2"
           limit_e="1000" limit_l="-3.14" limit_u="3.14" limit_v="0.5" />
           
  <m_link_cylinder name="arm_2"
              origin_rpy="0 0 0" origin_xyz="0 0 0.182"
              mass="1"
              ixx="0.01" ixy="0" ixz="0"
              iyy="0.01" iyz="0"
              izz="0.01"
              radius="0.02" length="0.365" />
  <m_joint name="arm_2_to_arm_3" type="revolute"
           axis_xyz="0 1 0"
           origin_rpy="0 0 0" origin_xyz="0 0 0.365"
           parent="arm_2" child="arm_3"
           limit_e="1000" limit_l="-3.14" limit_u="3.14" limit_v="0.5" />
           
  <m_link_cylinder name="arm_3"
              origin_rpy="0 0 0" origin_xyz="0 0 0.05"
              mass="1"
              ixx="0.01" ixy="0" ixz="0"
              iyy="0.01" iyz="0"
              izz="0.01"
              radius="0.02" length="0.1" />         
              
    

  <xacro:macro name="wheel" params="prefix suffix ref ref2">
    <link name="${prefix}_${suffix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheelthick}" radius="${wheeldiam/2}"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheelthick}" radius="${wheeldiam/2}"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 1"/>
        </material>
      </collision>
      <xacro:default_inertial mass="1"/>
    </link>
    <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 0 ${ref}"/>
      <parent link="base_link"/>
      <child link="${prefix}_${suffix}_wheel"/>
      <origin xyz="${0.25*ref2} ${ref*(wheelthick/2+bwidth/2+0.01)} ${wheeldiam/2}"  rpy="${ref*pi/-2} 0 0" />
    </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo reference="${prefix}_${suffix}_wheel">
      <fdir1 value="0 0 1"/>
      <mu1 value="1"/>
      <mu2 value="100"/>
      <kp value="10000000.0" />
      <kd value="1.0" />

      <material>Gazebo/Grey</material>
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
    <transmission name="${prefix}_${suffix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_${suffix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_${suffix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>
  

  
  <xacro:wheel prefix="left" suffix="front" ref="-1" ref2="1"/>
  <xacro:wheel prefix="left" suffix="back" ref="-1" ref2="-1"/>
  <xacro:wheel prefix="right" suffix="front" ref="1" ref2="1"/>
  <xacro:wheel prefix="right" suffix="back" ref="1" ref2="-1"/>
  
  
    <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  

</robot>
